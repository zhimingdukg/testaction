name: CI

on:
  # Compare the preceeding commit -> to the current commit of the main branch.
  # (Note: To compare changes between the current commit to the last pushed remote commit of the main branch set `since_last_remote_commit: true`)
  push:
    branches:
      - main
  # Compare the last commit of main -> to the current commit of a PR branch.
  # (Note: To compare changes between the current commit to the last pushed remote commit of a PR branch set `since_last_remote_commit: true`)
  pull_request:
    branches:
      - main

jobs:

  build:
    runs-on: ubuntu-latest  # windows-latest | macos-latest
    name: Test changed-files
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

      # Example 2
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v35
        with:
          files: docs/*.{js,html,py}  # Alternatively using: `docs/**` or `docs`

      - name: Run step if any file(s) in the docs folder change
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "One or more files in the docs folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}"
          echo "List all the files that have changed: ${{ steps.changed-files-specific.outputs.all_changed_files }}" > output.log
 
      # Example 3
      - name: Get changed js files excluding the docs folder
        id: changed-files-excluded
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/*.js
          files_ignore: docs/** # Alternatively using: `docs`

      - name: Run step if any other js file(s) change
        if: steps.changed-files-excluded.outputs.any_changed == 'true'
        run: |
          echo "One or more js files not in the doc folder has changed."
          echo "List all the files that have changed: ${{ steps.changed-files-excluded.outputs.all_changed_files }}"

      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          # Specify connection via URL (replaces server_address, server_port, secure,
          # username and password)
          #
          # Format:
          #
          #  * smtp://user:password@server:port
          #  * smtp+starttls://user:password@server:port
          #@ smtp://shptxc:chqdwarvdunuyugp@gmail.com:25
          #connection_url: ${{secrets.MAIL_CONNECTION}}
          connection_url: Smtp://shptxc:uwawypwbcuxfcnbp@gmail.com:465
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          #password: ${{secrets.MAIL_PASSWORD}}
          password: uwawypwbcuxfcnbp
          # Required mail subject:
          subject: Github Actions job result - test
          # Required recipients' addresses:
          to: zhiming.dai@ukg.com
          # Required sender full name (address can be skipped):
          from: shptxc # <user@example.com>
          # Optional plain body:
          body: output.log
          # Optional HTML body read from file:
          #html_body: file://README.html
          # Optional carbon copy recipients:
          #cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          #bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          #reply_to: luke@example.com
          # Optional Message ID this message is replying to:
          #in_reply_to: <random-luke@example.com>
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          #convert_markdown: true
          # Optional attachments:
          #attachments: attachments.zip,git.diff,./dist/static/*.js
          attachments: output.log
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low